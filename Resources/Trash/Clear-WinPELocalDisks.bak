<#
.SYNOPSIS
Clears all Local Disks for OS Deployment

.DESCRIPTION
Clears all Local Disks for OS Deployment
Before deploying an Operating System, it is important to clear all local disks
If this function is running from Windows, it will ALWAYS be in Sandbox mode, regardless of the -Force parameter

.PARAMETER Title
Title displayed during script execution
Default = Clear-WinPELocalDisks
Alias = T

.PARAMETER NonInteractive
Interactive mode is enabled by default
This parameter will bypass Interactive mode
Alias = NI

.PARAMETER Force
Sandbox mode is enabled by default to be non-destructive
This parameter will bypass Sandbox mode
Alias = F

.EXAMPLE
Clear-WinPELocalDisks
Interactive = True
Sandbox     = True

.EXAMPLE
Clear-WinPELocalDisks -NonInteractive
Interactive = False
Sandbox     = True

.EXAMPLE
Clear-WinPELocalDisks -Force
Interactive = True
Sandbox     = False

.EXAMPLE
Clear-WinPELocalDisks -NonInteractive -Force
Interactive = False
Sandbox     = False

.LINK
https://github.com/OSDeploy/OSD/tree/master/Docs

.NOTES
21.2.13     Initial Release
#>
function Clear-WinPELocalDisks {
    [CmdletBinding()]
    param (
        [Alias('T')]
        [string]$Title = 'Clear-WinPELocalDisks',

        [Alias('NI')]
        [System.Management.Automation.SwitchParameter]$NonInteractive,

        [Alias('F')]
        [System.Management.Automation.SwitchParameter]$Force
    )
    
    #=================================================
    #	OSD Module Information
    #=================================================
    $OSDVersion = $($MyInvocation.MyCommand.Module.Version)
    Write-Verbose "OSD $OSDVersion $Title"
    #=================================================
    #	Set Defaults
    #=================================================
    $global:OSDDisk = $null
    $GetDisk = $null
    $DirtyDisks = $null
    $Sandbox = $true
    $global:OSDDiskSelect = $false
    $OSDDiskSkipDisplay = $false
    #=================================================
    #	Get all Fixed Disks larger than 20GB
    #=================================================
    $GetDisk = Get-Disk | `
    Where-Object {($_.BusType -ne 'USB')} | `
    Where-Object {($_.BusType -notmatch 'Virtual')} | `
    Where-Object {($_.Size -gt 20GB)} | `
    Sort-Object Number
    #=================================================
    #	No Fixed Disks
    #=================================================
    if ($null -eq $GetDisk) {
        Write-Verbose "0 fixed disks are present"
        Return $null
    }
    #=================================================
    #	Get all Fixed Disks that are Dirty
    #=================================================
    $CleanDisks = $GetDisk | Where-Object {$_.PartitionStyle -eq 'RAW'}
    #=================================================
    #	Get all Fixed Disks that are Dirty
    #=================================================
    $DirtyDisks = $GetDisk | Where-Object {$_.PartitionStyle -ne 'RAW'}
    #=================================================
    #	No Dirty Disks
    #=================================================
    if ($null -eq $DirtyDisks) {
        Write-Verbose "0 fixed disks need to be cleaned"
        Return $null
    }
    #=================================================
    #	Force Validation
    #=================================================
    if ($Force.IsPresent) {$Sandbox = $false}
    #=================================================
    #	IsWinPE
    #=================================================
    if (-NOT (Get-OSDGather -Property IsWinPE)) {
        Write-Warning "WinPE is required for execution"
        $Sandbox = $true
    }
    #=================================================
    #	IsAdmin
    #=================================================
    if (-NOT (Get-OSDGather -Property IsAdmin)) {
        Write-Warning "Administrative Rights are required for execution"
        $Sandbox = $true
    }
    #=================================================
    #	Sandbox
    #=================================================
    if ($Sandbox -eq $true) {
        Write-Warning "$Title is running in Sandbox Mode (non-desctructive)"
        Write-Warning "Use the -Force parameter to bypass Sandbox Mode"
    }
    #=================================================
    #	Clear-Disk
    #=================================================
    foreach ($item in $DirtyDisks) {
        Write-Host "Clear-Disk $($item.Number) $($item.BusType) $($item.FriendlyName) [$($item.PartitionStyle) $($item.NumberOfPartitions) Partitions]" -ForegroundColor Yellow
        $ConfirmClearDisk = $null

        if ($NonInteractive -eq $true) {
            $ConfirmClearDisk = 'C'
        } else {
            do {
                $ConfirmClearDisk = Read-Host "Press C to CLEAR this disk, or S to SKIP (and press Enter)"
            }
            until ($ConfirmClearDisk -eq 'C' -or $ConfirmClearDisk -eq 'S')
        }

        if (($Sandbox -eq $false) -and ($ConfirmClearDisk -eq 'C')) {
$null = @"
select disk $($item.Number)
clean
exit 
"@ | diskpart.exe
        }
    }
    Return $null
}