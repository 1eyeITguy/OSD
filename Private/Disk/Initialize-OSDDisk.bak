<#
.SYNOPSIS
Initializes any RAW Disks.  Automatically selects GPT or MBR

.DESCRIPTION
Initializes any RAW Disks.  Automatically selects GPT or MBR

.EXAMPLE
Initialize-OSDDisk
Interactive = True
Sandbox     = True

.EXAMPLE
Initialize-OSDDisk -Confirm
Interactive = True
Sandbox     = True

.EXAMPLE
Initialize-OSDDisk -Force
Interactive = False
Sandbox     = False

.EXAMPLE
Initialize-OSDDisk -Confirm -Force
Interactive = True
Sandbox     = False

.LINK
https://github.com/OSDeploy/OSD/tree/master/Docs

.NOTES
21.2.14     Initial Release
#>
function Initialize-OSDDisk {
    [CmdletBinding(SupportsShouldProcess = $true)]
    param (
        [Parameter(ValueFromPipeline = $true)]
        [Object[]]$InputObject,

        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [Alias('T')]
        [string]$Title = 'Initialize-OSDDisk',

        [Parameter(ValueFromPipelineByPropertyName = $true)]
        [Alias('F')]
        [System.Management.Automation.SwitchParameter]$Force
    )

    begin {
        #=================================================
        #	OSD Module Information
        #=================================================
        $OSDVersion = $($MyInvocation.MyCommand.Module.Version)
        Write-Verbose "OSD $OSDVersion $Title"
        #=================================================
        #	Set Defaults
        #=================================================
        $ClearDisks = $null
        $Sandbox = $true
        #=================================================
        #	Force Validation
        #=================================================
        if ($Force.IsPresent) {$Sandbox = $false}
        #=================================================
        #	PartitionStyle
        #=================================================
        if (Get-OSDGather -Property IsUEFI) {
            $PartitionStyle = 'GPT'
        } else {
            $PartitionStyle = 'MBR'
        }
        #=================================================
        #	Get all Fixed Disks larger than 15GB
        #=================================================
        if ($InputObject) {
            $ClearDisks = $InputObject
        } else {
            $ClearDisks = Get-OSDDisk -BusTypeNot USB,Virtual -PartitionStyle RAW | `
            Where-Object {($_.Size -gt 15GB)} | `
            Sort-Object Number
        }
        #=================================================
        #	No RAW Disks
        #=================================================
        if ($null -eq $ClearDisks) {
            Write-Verbose "Disks are already initialized"
            Return $null
        }
        #=================================================
        #	IsWinPE
        #=================================================
        if (-NOT (Get-OSDGather -Property IsWinPE)) {
            Write-Warning "WinPE is required for execution"
            $Sandbox = $true
        }
        #=================================================
        #	IsAdmin
        #=================================================
        if (-NOT (Get-OSDGather -Property IsAdmin)) {
            Write-Warning "Administrative Rights are required for execution"
            $Sandbox = $true
        }
        #=================================================
        #	Sandbox
        #=================================================
        if ($Sandbox -eq $true) {
            Write-Warning "$Title is running in Sandbox (non-desctructive)"
            Write-Warning "Disks will not be initialized while in Sandbox"
            Write-Warning "-Force parameter is required to bypass Sandbox"
            Write-Warning "-Confirm parameter is enabled in Sandbox"
            $ConfirmPreference = 'Low'
        }
        #=================================================
    }
    process {
        #=================================================
        #	Initialize-Disk
        #=================================================
        $InitializeOSDDisk = @()
        If ($ClearDisks) {
            if ($ConfirmPreference -eq 'Low') {
                Write-Host ""
                Write-Warning "Confirm Initialize-Disk on each of the following Disks:"
                foreach ($Item in $ClearDisks) {
                    Write-Host "Disk $($Item.Number) $($Item.BusType) $($Item.MediaType) $($Item.FriendlyName) [$($Item.PartitionStyle)]" -ForegroundColor Yellow -BackgroundColor Black
                }
                Write-Host ""
                Start-Sleep -Seconds 3
            }
            
            foreach ($Item in $ClearDisks) {
                if ($PSCmdlet.ShouldProcess("$PartitionStyle Disk $($Item.Number) $($Item.BusType) $($Item.MediaType) $($Item.FriendlyName) [$($Item.PartitionStyle)]","Initialize-Disk")){
                    Write-Warning "Initializing Disk $($Item.Number) $($Item.BusType) $($Item.MediaType) $($Item.FriendlyName) [$($Item.PartitionStyle)]"
                    if ($Sandbox -eq $false) {
                        $InitializeOSDDisk += $Item
                        Initialize-Disk -Number $Item.DiskNumber -PartitionStyle $PartitionStyle
                    }
                }
            }
        }
        Return $InitializeOSDDisk
        #=================================================
    }
    end {}
}